// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
  SUPER_ADMIN
}

enum RequestModelStatus {
  PENDING
  APPROVED
  REJECTED
}

model Users {
  id            String         @id @default(uuid())
  name          String
  email         String         @unique
  password      String
  role          UserRole       @default(USER)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  userProfile   UserProfiles?
  AdminProfiles AdminProfiles?
}

model AdminProfiles {
  id           String   @id @default(uuid())
  userId       String   @unique
  profileImage String?  @default("")
  bio          String
  age          Int
  address      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         Users    @relation(fields: [userId], references: [id])
  Trips        Trips[]
}

model UserProfiles {
  id            String          @id @default(uuid())
  userId        String          @unique
  profieImage   String?         @default("")
  bio           String
  age           Int
  address       String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  users         Users           @relation(fields: [userId], references: [id])
  RequestModels RequestModels[]
}

model Trips {
  id             String          @id @default(uuid())
  userId         String
  tripDetails    String
  startingPoint  String
  destination    String
  startDate      DateTime
  endDate        DateTime
  budget         Int
  activities     String[]
  capacity       Int
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  userProfilesId String?
  creator        AdminProfiles   @relation(fields: [userId], references: [id])
  requestModel   RequestModels[]
}

model RequestModels {
  id        String             @id @default(uuid())
  tripId    String
  userId    String
  status    RequestModelStatus @default(PENDING)
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  trip      Trips              @relation(fields: [tripId], references: [id])
  user      UserProfiles       @relation(fields: [userId], references: [id])
}
